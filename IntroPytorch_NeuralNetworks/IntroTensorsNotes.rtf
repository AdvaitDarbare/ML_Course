{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs40 \cf0 Intro to Tensors\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf0 \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 {\listtext	\uc0\u8259 	}
\fs26 Tensors act as storage containers for numerical data\
\ls1\ilvl0
\fs24 {\listtext	\uc0\u8259 	}
\fs26 Most of the time, data is in NumPy or pandas df, we then need to convert to tensors using PyTorch\'92s torch.tensors()\
\ls1\ilvl0
\fs24 {\listtext	\uc0\u8259 	}
\fs26 torch.tensors() has two args: numerical data like array, list, or var; desired data type (dtype) such as torch.int or torch.float\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 Example 1\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 # define the apartment's rent\
rent =\'a02550\
# convert to an integer tensor\
rent_tensor =\'a0torch.tensor(\
\'a0\'a0\'a0\'a0rent, \
\'a0\'a0\'a0\'a0dtype=torch.int)\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 Example 2\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 # create a\'a0numpy array with the rent in US dollars, size in square feet, and age in years\
apt_array =\'a0np.array([2550, 750, 3.5])\
# convert to a\'a0tensor of floats\
apt_tensor =\'a0torch.tensor(\
\'a0\'a0\'a0\'a0apt_array, \
\'a0\'a0\'a0\'a0dtype=torch.float)\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 Example 3\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 # convert a\'a0DataFrame named df to a\'a0PyTorch tensor\
torch.tensor(\
\'a0\'a0\'a0\'a0df.values, \
\'a0\'a0\'a0\'a0dtype=torch.float)\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 Working with individual columns in DF\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 torch.tensor(\
\'a0\'a0\'a0\'a0df[['column']].values,\
\'a0\'a0\'a0\'a0dtype=torch.float)\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 OR
\f1\b0 \
\
torch.tensor(\
\'a0\'a0\'a0\'a0df['column'].values,\
\'a0\'a0\'a0\'a0dtype=torch.float).view(-1,1)\
\
\
\
\
\
\
}